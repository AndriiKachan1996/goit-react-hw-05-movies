{"version":3,"file":"static/js/730.f5bd6352.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/moviedb-api.js","pages/MovieInfo/MovieInfo.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCardINFO/MovieCardINFO.styled.js","components/MovieCardINFO/MovieCardINFO.jsx","components/MovieCard/MovieCard.jsx","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '427714332144f4d577c0c71ca226b2b3';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrendsMovies() {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильмам `\n    );\n  }\n}\n\nexport async function getMovieDesc(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result;\n    } else return {};\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильму ${movieID}  `\n    );\n  }\n}\nexport async function getMovieReviews(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result?.results.map(({ author, content, id }) => ({\n        author,\n        content,\n        id,\n      }));\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения отзывов к фильму ${movieID}  `\n    );\n  }\n}\n\nexport async function getMovieCast(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const data = await responce.json();\n      const results = data.cast.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          original_name: item.original_name,\n          popularity: item.popularity,\n          profile_path: getImagePath(item.profile_path),\n          character: item.character,\n        };\n      });\n\n      return results;\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения актеров фильма ${movieID}  `\n    );\n  }\n}\n\nexport async function getSearchMovie(query = '') {\n  try {\n    if (query === '') return [];\n    const responce = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} поиска фильма по запросу ${query}`\n    );\n  }\n}\n\nexport function getImagePath(image) {\n  return image\n    ? BASE_IMAGE_URL + image\n    : 'https://via.placeholder.com/300x400/bdc5f2/2b2323?text=Image+not+found';\n}\n\nexport const getMovieYear = releaseDate => {\n  return releaseDate !== '' ? `(${new Date(releaseDate).getFullYear()})` : '';\n};\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const InfoList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  font-weight: 700;\n  margin-bottom: 40px;\n`;\n\nexport const MovieItem = styled.li`\n  border: 1px solid grey;\n  border-radius: 30px;\n  padding: 10px 60px;\n  background-color: #fcf7f5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n  }\n  cursor: pointer;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  font-size: 40px;\n  font-family: math;\n\n  &.active,\n  :hover {\n    color: #f01896;\n  }\n`;\nexport const InfoContainer = styled.div`\n  margin-top: 40px;\n`;\nexport const BackLink = styled(Link)`\n  font-weight: 700;\n  text-decoration: none;\n  display: block;\n  margin-top: 20px;\n  font-size: 30px;\n\n  &:hover {\n    color: #f01896;\n  }\n`;\n\nexport const InfoTitle = styled.h3`\n  font-size: 50px;\n  text-align: center;\n  text-shadow: 1px 0px 0px #050429, 0px 1px 1px #050429;\n  font-family: math;\n  margin: 30px 0;\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieCardWrapp = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 50px;\n`;\nexport const ImageWrapp = styled.div`\n  height: 650px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  border-radius: 10px;\n  display: block;\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  height: 100%;\n`;\nexport const InfoWrapp = styled.div`\n  width: 1500px;\n`;\n\nexport const MovieName = styled.h1`\n  font-weight: 700;\n  font-size: 40px;\n  text-shadow: 1px 1px 1px #050429, 2px 2px 1px #050429;\n  font-family: math;\n`;\n\nexport const MovieTagLine = styled.p`\n  font-family: math;\n  font-weight: 700;\n  font-size: 35px;\n\n  text-shadow: 1px 0px 0px #050429, 0px 1px 1px #050429;\n`;\n","import styled from '@emotion/styled';\n\nexport const InfoLineWrapp = styled.p`\n  display: flex;\n  gap: 25px;\n  font-size: 30px;\n  font-weight: 500;\n  font-family: math;\n  margin: auto;\n  &:not(:last-child) {\n    margin-bottom: 70px;\n  }\n`;\n\nexport const Title = styled.span`\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { InfoLineWrapp, Title } from './MovieCardINFO.styled';\n\nconst MovieCardINFO = ({ title, description }) => {\n  return (\n    <InfoLineWrapp>\n      <Title>{title}</Title>\n      <span>{description}</span>\n    </InfoLineWrapp>\n  );\n};\n\nMovieCardINFO.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n};\nexport default MovieCardINFO;\n","import PropTypes from 'prop-types';\nimport { getImagePath, getMovieYear } from 'api/moviedb-api';\nimport {\n  Image,\n  ImageWrapp,\n  InfoWrapp,\n  MovieCardWrapp,\n  MovieName,\n  MovieTagLine,\n} from './MovieCard.styled';\nimport MovieCardINFO from 'components/MovieCardINFO/MovieCardINFO';\n\nconst MovieCard = ({ movieInfo }) => {\n  const createGenre = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  return (\n    <MovieCardWrapp>\n      <ImageWrapp>\n        <Image\n          src={\n            movieInfo.poster_path\n              ? getImagePath(movieInfo.poster_path)\n              : 'https://via.placeholder.com/300x400/bdc5f2/2b2323?text=Image+not+found'\n          }\n        ></Image>\n      </ImageWrapp>\n      <InfoWrapp>\n        <MovieName>\n          {movieInfo.title} {getMovieYear(movieInfo.release_date)}\n        </MovieName>\n        <MovieTagLine>{movieInfo.tagline}</MovieTagLine>\n        <MovieCardINFO title=\"Vote:\" description={movieInfo.vote_average} />\n        <MovieCardINFO title=\"Popularity:\" description={movieInfo.popularity} />\n        <MovieCardINFO title=\"Overview:\" description={movieInfo.overview} />\n        <MovieCardINFO\n          title=\"Genre:\"\n          description={createGenre(movieInfo.genres)}\n        />\n      </InfoWrapp>\n    </MovieCardWrapp>\n  );\n};\n\nMovieCard.propTypes = {\n  movieInfo: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    id: PropTypes.number.isRequired,\n    overview: PropTypes.string,\n    popularity: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    tagline: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDesc } from 'api/moviedb-api';\nimport { Container, Section } from 'components/common.styled';\nimport {\n  BackLink,\n  InfoContainer,\n  InfoLink,\n  InfoList,\n  InfoTitle,\n  MovieItem,\n} from './MovieInfo.styled';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieInfo = () => {\n  const { moveID } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieDesc(moveID).then(responce => {\n      const {\n        genres,\n        id,\n        overview,\n        popularity,\n        poster_path,\n        release_date,\n        tagline,\n        title,\n        vote_average,\n      } = responce;\n\n      setMovieInfo({\n        genres,\n        id,\n        overview,\n        popularity,\n        poster_path,\n        release_date,\n        tagline,\n        title,\n        vote_average,\n      });\n    });\n  }, [moveID]);\n\n  return (\n    <Section>\n      <Container>\n        <BackLink to={backLinkHref.current} state={{ from: location }}>\n          ⬅️Go back\n        </BackLink>\n        {movieInfo && movieInfo.id && (\n          <MovieCard movieInfo={movieInfo}></MovieCard>\n        )}\n        <InfoContainer>\n          <InfoTitle>Additional information</InfoTitle>\n          <InfoList>\n            <MovieItem>\n              <InfoLink to=\"cast\">Cast</InfoLink>\n            </MovieItem>\n            <MovieItem>\n              <InfoLink to=\"review\">Review</InfoLink>\n            </MovieItem>\n          </InfoList>\n        </InfoContainer>\n\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Section>\n  );\n};\n\nexport default MovieInfo;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","getTrendsMovies","fetch","responce","status","json","result","results","map","item","id","name","title","poster_path","getImagePath","message","getMovieDesc","movieID","getMovieReviews","author","content","getMovieCast","data","cast","original_name","popularity","profile_path","character","getSearchMovie","query","image","getMovieYear","releaseDate","Date","getFullYear","InfoList","styled","MovieItem","InfoLink","NavLink","InfoContainer","BackLink","Link","InfoTitle","MovieCardWrapp","ImageWrapp","Image","InfoWrapp","MovieName","MovieTagLine","InfoLineWrapp","Title","description","genres","movieInfo","src","release_date","tagline","vote_average","overview","genre","join","moveID","useParams","useState","setMovieInfo","location","useLocation","backLinkHref","useRef","state","from","useEffect","to","current","Suspense","fallback"],"sourceRoot":""}