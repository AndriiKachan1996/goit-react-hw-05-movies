{"version":3,"file":"static/js/304.647c4ba9.chunk.js","mappings":"wHAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C,uMC7BMC,EAAU,mCACVC,EAAW,gCAGV,SAAeC,IAAtB,4CAAO,OAAP,cAAO,+GAEoBC,MAAM,GAAD,OACvBF,EADuB,qCACcD,IAHvC,UAKqB,OAHlBI,EAFH,QAKUC,OALV,iCAMoBD,EAASE,OAN7B,cAMKC,EANL,yBAOMA,EAAOC,QAAQC,KAAI,SAAAC,GACxB,MAAO,CACLC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,MAAQF,EAAKG,MACxBC,YAAaC,EAAaL,EAAKI,aAElC,KAbA,iCAcW,IAdX,mFAgBI,IAAIzB,QAAQT,OAAZ,+CACK,KAAMoC,QADX,sKAhBJ,iFAsBA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA4BC,GAA5B,kGAEoBf,MAAM,GAAD,OACvBF,EADuB,iBACNiB,EADM,oBACalB,EADb,oBAFzB,UAKqB,OAHlBI,EAFH,QAKUC,OALV,iCAMoBD,EAASE,OAN7B,cAMKC,EANL,yBAQMA,GARN,iCASW,CAAC,GATZ,mFAWI,IAAIlB,QAAQT,OAAZ,+CACK,KAAMoC,QADX,qKACkDE,EADlD,QAXJ,iFAgBA,SAAeC,EAAtB,+CAAO,OAAP,cAAO,WAA+BD,GAA/B,kGAEoBf,MAAM,GAAD,OACvBF,EADuB,iBACNiB,EADM,4BACqBlB,EADrB,2BAFzB,UAKqB,OAHlBI,EAFH,QAKUC,OALV,iCAMoBD,EAASE,OAN7B,cAMKC,EANL,gCAQMA,QARN,IAQMA,OARN,EAQMA,EAAQC,QAAQC,KAAI,kBAA8B,CACvDW,OADyB,EAAGA,OAE5BC,QAFyB,EAAWA,QAGpCV,GAHyB,EAAoBA,GAApB,KAR1B,iCAaW,IAbX,mFAeI,IAAItB,QAAQT,OAAZ,+CACK,KAAMoC,QADX,0JACiDE,EADjD,QAfJ,iFAqBA,SAAeI,EAAtB,+CAAO,OAAP,cAAO,WAA4BJ,GAA5B,oGAEoBf,MAAM,GAAD,OACvBF,EADuB,iBACNiB,EADM,4BACqBlB,EADrB,2BAFzB,UAKqB,OAHlBI,EAFH,QAKUC,OALV,iCAMkBD,EAASE,OAN3B,cAMKiB,EANL,OAOKf,EAAUe,EAAKC,KAAKf,KAAI,SAAAC,GAC5B,MAAO,CACLC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXa,cAAef,EAAKe,cACpBC,WAAYhB,EAAKgB,WACjBC,aAAcZ,EAAaL,EAAKiB,cAChCC,UAAWlB,EAAKkB,UAEnB,IAhBA,kBAkBMpB,GAlBN,iCAmBW,IAnBX,mFAqBI,IAAInB,QAAQT,OAAZ,+CACK,KAAMoC,QADX,mJAC+CE,EAD/C,QArBJ,iFA2BA,SAAeW,IAAtB,4CAAO,OAAP,cAAO,uGAA8BC,EAA9B,+BAAsC,GAAtC,SAEW,KAAVA,EAFD,yCAEsB,IAFtB,uBAGoB3B,MAAM,GAAD,OACvBF,EADuB,gCACSD,EADT,iCACyC8B,EADzC,gCAHzB,UAOqB,OAJlB1B,EAHH,QAOUC,OAPV,kCAQoBD,EAASE,OAR7B,eAQKC,EARL,yBASMA,EAAOC,QAAQC,KAAI,SAAAC,GACxB,MAAO,CACLC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,MAAQF,EAAKG,MACxBC,YAAaC,EAAaL,EAAKI,aAElC,KAfA,iCAgBW,IAhBX,mFAkBI,IAAIzB,QAAQT,OAAZ,+CACK,KAAMoC,QADX,8IAC+Cc,KAnBnD,kFAwBA,SAASf,EAAagB,GAC3B,OAAOA,EAjHc,kCAkHAA,EACjB,wEACL,CAEM,IAAMC,EAAe,SAAAC,GAC1B,MAAuB,KAAhBA,EAAA,WAAyB,IAAIC,KAAKD,GAAaE,cAA/C,KAAkE,EAC1E,C,yGCxHYC,EAAYC,EAAAA,EAAAA,GAAH,qGAOTC,EAAeD,EAAAA,EAAAA,GAAH,uPCPZE,EAAYF,EAAAA,EAAAA,IAAH,sBAETG,EAAQH,EAAAA,EAAAA,IAAH,+DAKLI,EAAQJ,EAAAA,EAAAA,IAAH,0DAKLK,EAAIL,EAAAA,EAAAA,EAAH,iR,SCKd,EAhBqB,SAAC,GAA+B,IAA7BM,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACjC,OACE,UAACL,EAAD,YACE,SAACE,EAAD,WACE,SAACD,EAAD,CAAOK,IAAKD,EAAYE,IAAG,oBAAeH,QAG5C,SAACD,EAAD,UAAIC,MAGT,ECwBD,EAhCqB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACb,EAAD,UACGW,GACCA,EAAOtC,KAAI,SAAAC,GAAI,OACb,SAAC4B,EAAD,WACE,SAAC,KAAD,CACEY,GAAE,UAA2B,MAAtBF,EAASG,SAAmB,UAAY,IAA7C,OAAkDzC,EAAKC,IACzDyC,MAAO,CAAEC,KAAML,GAFjB,UAIE,SAAC,EAAD,CACEL,UAAWjC,EAAKE,KAChBgC,WAAYlC,EAAKI,iBAPJJ,EAAKC,GADX,KAetB,C,+HCxBY2C,E,OAAYjB,EAAAA,GAAH,wK,SCIhBkB,EACE,EADFA,EAEK,EAFLA,EAGM,EAHNA,EAIM,EA0CZ,EAxCiB,WACf,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASD,GAArC,eAAOlD,EAAP,KAAeqD,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOrE,EAAP,KAAcwE,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACJb,EACFW,EAAUH,IAIZG,EAAUH,IACVrD,EAAAA,EAAAA,MACGZ,MAAK,SAAAkB,GACJiD,EAAUjD,GACVkD,EAAUH,EACX,IACAM,OAAM,SAAA1E,GACLuE,EAAUH,GACVE,EAAU,MACVE,EAASxE,EACV,IACJ,GAAE,CAAC4D,KAGF,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAACO,EAAD,mCACCjD,IAAWkD,GAAyC,KAAb,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQe,UACxC,SAACC,EAAA,EAAD,CAAchB,OAAQA,IAEvB1C,IAAWkD,IAAsB,qCAAapE,EAAM6B,WAEpDX,IAAWkD,GAAyC,KAAb,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQe,UACxC,sDAKT,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/moviedb-api.js","components/HomePageList/HomePageList.styled.js","components/HomePageITEM/HomePageITEM.styled.js","components/HomePageITEM/HomePageITEM.jsx","components/HomePageList/HomePageList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '427714332144f4d577c0c71ca226b2b3';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrendsMovies() {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильмам `\n    );\n  }\n}\n\nexport async function getMovieDesc(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result;\n    } else return {};\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильму ${movieID}  `\n    );\n  }\n}\nexport async function getMovieReviews(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result?.results.map(({ author, content, id }) => ({\n        author,\n        content,\n        id,\n      }));\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения отзывов к фильму ${movieID}  `\n    );\n  }\n}\n\nexport async function getMovieCast(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const data = await responce.json();\n      const results = data.cast.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          original_name: item.original_name,\n          popularity: item.popularity,\n          profile_path: getImagePath(item.profile_path),\n          character: item.character,\n        };\n      });\n\n      return results;\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения актеров фильма ${movieID}  `\n    );\n  }\n}\n\nexport async function getSearchMovie(query = '') {\n  try {\n    if (query === '') return [];\n    const responce = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} поиска фильма по запросу ${query}`\n    );\n  }\n}\n\nexport function getImagePath(image) {\n  return image\n    ? BASE_IMAGE_URL + image\n    : 'https://via.placeholder.com/300x400/bdc5f2/2b2323?text=Image+not+found';\n}\n\nexport const getMovieYear = releaseDate => {\n  return releaseDate !== '' ? `(${new Date(releaseDate).getFullYear()})` : '';\n};\n","import styled from '@emotion/styled';\n\nexport const ListWrapp = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin: -20px;\n`;\n\nexport const ListItemCard = styled.li`\n  flex-basis: calc((100% - 2 * 80px) / 4);\n\n  background-color: white;\n  margin: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n","import styled from '@emotion/styled';\n\nexport const ItemWrapp = styled.div``;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  height: 100%;\n`;\n\nexport const Thumb = styled.div`\n  width: 100%;\n  height: 600px;\n`;\n\nexport const P = styled.p`\n  text-decoration: none;\n\n  padding: 5px;\n  text-align: center;\n  text-align: center;\n  font-family: math;\n  font-size: 30px;\n\n  text-shadow: 1px 0px 0px #050429, 1px 1px 1px #050429;\n  color: black;\n  &:hover {\n    color: #f01896;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Image, ItemWrapp, P, Thumb } from './HomePageITEM.styled';\n\nconst HomePageITEM = ({ movieName, movieImage }) => {\n  return (\n    <ItemWrapp>\n      <Thumb>\n        <Image src={movieImage} alt={`Image for ${movieName}`}></Image>\n      </Thumb>\n\n      <P>{movieName}</P>\n    </ItemWrapp>\n  );\n};\n\nHomePageITEM.propTypes = {\n  movieName: PropTypes.string.isRequired,\n  movieImage: PropTypes.string.isRequired,\n};\nexport default HomePageITEM;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ListItemCard, ListWrapp } from './HomePageList.styled';\nimport HomePageITEM from 'components/HomePageITEM/HomePageITEM';\n\nconst HomePageList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListWrapp>\n      {movies &&\n        movies.map(item => (\n          <ListItemCard key={item.id}>\n            <Link\n              to={`${location.pathname === '/' ? 'movies/' : ''}${item.id}`}\n              state={{ from: location }}\n            >\n              <HomePageITEM\n                movieName={item.name}\n                movieImage={item.poster_path}\n              />\n            </Link>\n          </ListItemCard>\n        ))}\n    </ListWrapp>\n  );\n};\n\nHomePageList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\nexport default HomePageList;\n","import styled from '@emotion/styled';\n\nexport const HomeTitle = styled.h1`\n  text-shadow: 1px 0px 0px #050429, 0px 1px 1px #050429;\n  text-align: center;\n  font-size: 40px;\n  font-family: math;\n\n  margin: 30px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { getTrendsMovies } from 'api/moviedb-api';\nimport HomePageList from 'components/HomePageList/HomePageList';\nimport { Container, Section } from 'components/common.styled';\nimport { HomeTitle } from './Home.styled';\n\nconst appStatus = {\n  IDLE: 0,\n  PENDING: 1,\n  RESOLVED: 2,\n  REJECTED: 4,\n};\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(appStatus.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (movies) {\n      setStatus(appStatus.RESOLVED);\n      return;\n    }\n\n    setStatus(appStatus.PENDING);\n    getTrendsMovies()\n      .then(results => {\n        setMovies(results);\n        setStatus(appStatus.RESOLVED);\n      })\n      .catch(error => {\n        setStatus(appStatus.REJECTED);\n        setMovies(null);\n        setError(error);\n      });\n  }, [movies]);\n\n  return (\n    <Section>\n      <Container>\n        <HomeTitle>Movies Week Trending</HomeTitle>\n        {status === appStatus.RESOLVED && movies?.length !== 0 && (\n          <HomePageList movies={movies}></HomePageList>\n        )}\n        {status === appStatus.REJECTED && <h1>Error - {error.message}</h1>}\n\n        {status === appStatus.RESOLVED && movies?.length === 0 && (\n          <h1>Information not found</h1>\n        )}\n      </Container>\n    </Section>\n  );\n};\nexport default HomePage;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","getTrendsMovies","fetch","responce","status","json","result","results","map","item","id","name","title","poster_path","getImagePath","message","getMovieDesc","movieID","getMovieReviews","author","content","getMovieCast","data","cast","original_name","popularity","profile_path","character","getSearchMovie","query","image","getMovieYear","releaseDate","Date","getFullYear","ListWrapp","styled","ListItemCard","ItemWrapp","Image","Thumb","P","movieName","movieImage","src","alt","movies","location","useLocation","to","pathname","state","from","HomeTitle","appStatus","useState","setMovies","setStatus","setError","useEffect","catch","length","HomePageList"],"sourceRoot":""}