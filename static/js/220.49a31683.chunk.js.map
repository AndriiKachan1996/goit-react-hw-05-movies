{"version":3,"file":"static/js/220.49a31683.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/moviedb-api.js","components/Cast/Cast.styled.js","components/CastITEM/CastITEM.styled.js","components/CastITEM/CastITEM.jsx","components/Cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '427714332144f4d577c0c71ca226b2b3';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrendsMovies() {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильмам `\n    );\n  }\n}\n\nexport async function getMovieDesc(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result;\n    } else return {};\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения информации фильму ${movieID}  `\n    );\n  }\n}\nexport async function getMovieReviews(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const result = await responce.json();\n\n      return result?.results.map(({ author, content, id }) => ({\n        author,\n        content,\n        id,\n      }));\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения отзывов к фильму ${movieID}  `\n    );\n  }\n}\n\nexport async function getMovieCast(movieID) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}movie/${movieID}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if (responce.status === 200) {\n      const data = await responce.json();\n      const results = data.cast.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          original_name: item.original_name,\n          popularity: item.popularity,\n          profile_path: getImagePath(item.profile_path),\n          character: item.character,\n        };\n      });\n\n      return results;\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} получения актеров фильма ${movieID}  `\n    );\n  }\n}\n\nexport async function getSearchMovie(query = '') {\n  try {\n    if (query === '') return [];\n    const responce = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    if (responce.status === 200) {\n      const result = await responce.json();\n      return result.results.map(item => {\n        return {\n          id: item.id,\n          name: item.name || item.title,\n          poster_path: getImagePath(item.poster_path),\n        };\n      });\n    } else return [];\n  } catch (error) {\n    return new Promise.reject(\n      `Ошибка ${error.message} поиска фильма по запросу ${query}`\n    );\n  }\n}\n\nexport function getImagePath(image) {\n  return image\n    ? BASE_IMAGE_URL + image\n    : 'https://via.placeholder.com/300x400/bdc5f2/2b2323?text=Image+not+found';\n}\n\nexport const getMovieYear = releaseDate => {\n  return releaseDate !== '' ? `(${new Date(releaseDate).getFullYear()})` : '';\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n","import styled from '@emotion/styled';\n\nexport const CastItemdWrapp = styled.li`\n  background-color: #fcf7f5;\n  font-family: math;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  flex-basis: Calc((100% - 5 * 10px) / 6);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const CastBox = styled.div`\n  height: 350px;\n  width: 100%;\n`;\n\nexport const CastImage = styled.img`\n  height: 100%;\n  object-fit: cover;\n`;\nexport const CastName = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n  padding-top: 10px;\n  margin: 0;\n  font-family: math;\n  text-align: center;\n`;\nexport const CastCharacter = styled.p`\n  font-size: 18px;\n  margin: 0;\n  text-align: center;\n`;\n\nexport const CastDesc = styled.div`\n  height: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  font-family: math;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  CastBox,\n  CastCharacter,\n  CastDesc,\n  CastImage,\n  CastItemdWrapp,\n  CastName,\n} from './CastITEM.styled';\n\nconst CastCard = ({ cast }) => {\n  return (\n    <CastItemdWrapp>\n      <CastBox>\n        <CastImage src={cast.profile_path} alt=\"\" />\n      </CastBox>\n      <CastDesc>\n        <CastName>{cast.name}</CastName>\n        <CastCharacter>Character: {cast.character}</CastCharacter>\n      </CastDesc>\n    </CastItemdWrapp>\n  );\n};\n\nCastCard.propTypes = {\n  cast: PropTypes.shape({\n    profile_path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n  }),\n};\n\nexport default CastCard;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/moviedb-api';\nimport { CastList } from './Cast.styled';\nimport CastCard from 'components/CastITEM/CastITEM';\n\nconst Cast = () => {\n  const { moveID } = useParams();\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    getMovieCast(moveID).then(response => {\n      const cast = response.map(item => {\n        return {\n          profile_path: item.profile_path,\n          name: item.name ?? '',\n          character: item.character ?? '',\n          id: item.id,\n        };\n      });\n      setCasts(cast);\n    });\n  }, [moveID]);\n  if (casts?.length !== 0)\n    return (\n      <CastList>\n        {casts && casts.map(cast => <CastCard key={cast.id} cast={cast} />)}\n      </CastList>\n    );\n  if (casts?.length === 0) return <p>We don't have any casts for this movie</p>;\n};\n\nexport default Cast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","getTrendsMovies","fetch","responce","status","json","result","results","map","item","id","name","title","poster_path","getImagePath","message","getMovieDesc","movieID","getMovieReviews","author","content","getMovieCast","data","cast","original_name","popularity","profile_path","character","getSearchMovie","query","image","getMovieYear","releaseDate","Date","getFullYear","CastList","styled","CastItemdWrapp","CastBox","CastImage","CastName","CastCharacter","CastDesc","src","alt","moveID","useParams","useState","casts","setCasts","useEffect","response","length"],"sourceRoot":""}